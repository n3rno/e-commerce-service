<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.hhplus.be.server.goods.infrastructure.persistence.mapper.GoodsMapper">

    <!-- 상품 정보 조회 (남은 재고 포함) -->
    <sql id="getGoodsInfo">
        WITH sold_goods as (
        SELECT IFNULL(SUM(quantity), 0) as sold_stock FROM order_goods WHERE goods_no = #{goods_no}
        GROUP BY goods_no
        <!-- TODO 동시성 처리 관련해서 더 좋은 방법이 있을지 고민해볼 것
         배타 락: https://incheol-jung.gitbook.io/docs/q-and-a/spring/feat.-tmi
         EXCLUSIVE LOCK
            서로 다른 트랜잭션에 대해 선점한 트랜잭션이 COMMIT 할 때까지 나머지 트랜잭션은 BLOCK 된다.
         -->
        FOR UPDATE
        )
        SELECT
        no,
        name,
        price,
        stock,
        stock - sold_goods.sold_stock as remain_stock
        FROM goods
    </sql>

    <select id="selectGoodsByGoodsNo" parameterType="long" resultType="kr.hhplus.be.server.goods.domain.model.GoodsResponseDto">
            <include refid="getGoodsInfo"/>
            <where>
                no = #{goodsNo}
            </where>
    </select>
    
    <select id="selectGoodsByGoodsList" resultType="kr.hhplus.be.server.goods.domain.model.GoodsResponseDto">
        <include refid="getGoodsInfo"/>
        <where>
            no in
            <foreach collection="goodsList" item="goods" open="(" separator="," close=")">
                #{goods.no}
            </foreach>
        </where>
    </select>

</mapper>